{"version":3,"sources":["Components/Scroll.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","react_default","a","createElement","style","overflowY","height","children","Card","_ref","id","name","email","className","src","concat","alt","CardList","robots","map","user","i","Components_Card","key","SearchBox","searchChange","type","placeholder","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchfield","target","value","state","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","Components_SearchBox","Components_Scroll","Components_CardList","React","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_Containers_App","document","getElementById"],"mappings":"yNAUeA,EARA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,UACrCN,EAAMO,WCSJC,EAZF,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,GAAIC,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,MACrB,OACIX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,gDACXZ,EAAAC,EAAAC,cAAA,OAAKW,IAAG,wBAAAC,OAA4BL,GAAMM,IAAI,QAC9Cf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKQ,GACLV,EAAAC,EAAAC,cAAA,SAAIS,MCSLK,EAdE,SAAAR,GAAc,IAAZS,EAAYT,EAAZS,OACOA,EAAOC,IAAI,SAACC,EAAMC,GACpC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,CAAMC,IAAKF,EAAGX,GAAIQ,EAAOG,GAAGX,GAAIC,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,UAGlF,OACIX,EAAAC,EAAAC,cAAA,WACKe,EAAOC,IAAI,SAACC,EAAMC,GACf,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,CAAMC,IAAKF,EAAGX,GAAIQ,EAAOG,GAAGX,GAAIC,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,YCI/EY,EAbG,SAAAf,GAAoB,IAAlBgB,EAAkBhB,EAAlBgB,aAChB,OACIxB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,QACXZ,EAAAC,EAAAC,cAAA,SACIU,UAAU,kCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCkCXI,qBApCX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAaJI,eAAiB,SAACC,GACdR,EAAKS,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAbzCZ,EAAKa,MAAQ,CACTzB,OAAQ,GACRsB,YAAa,IAJPV,mFAQM,IAAAc,EAAAX,KAChBY,MAAM,8CACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAS,CAACrB,OAAQ+B,uCAOtC,IAAAC,EAAAjB,KAEEkB,EAAiBlB,KAAKU,MAAMzB,OAAOkC,OAAO,SAACC,GAC7C,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASL,EAAKP,MAAMH,YAAYc,iBAGpE,OACIrD,EAAAC,EAAAC,cAAA,OAAKU,UAAU,MACXZ,EAAAC,EAAAC,cAAA,MAAIU,UAAU,MAAd,eACAZ,EAAAC,EAAAC,cAACqD,EAAD,CAAW/B,aAAgBQ,KAAKI,iBAChCpC,EAAAC,EAAAC,cAACsD,EAAD,KACIxD,EAAAC,EAAAC,cAACuD,EAAD,CAAUxC,OAAUiC,aA9BtBQ,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAnB,KAAAkB,EAAAE,KAAA,UAAqBpB,KAAK,SAAArC,GAAiD,IAA9C0D,EAA8C1D,EAA9C0D,OAAQC,EAAsC3D,EAAtC2D,OAAQC,EAA8B5D,EAA9B4D,OAAQC,EAAsB7D,EAAtB6D,OAAQC,EAAc9D,EAAd8D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCAdU,IAASC,OACPxE,EAAAC,EAAAC,cAACF,EAAAC,EAAMwE,WAAP,KACEzE,EAAAC,EAAAC,cAACwE,EAAD,OAEFC,SAASC,eAAe,SAM1BhB","file":"static/js/main.220b5ac7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pd3 ma2 grow shadow-5'>\r\n            <img src = {`https://robohash.org/${id}`} alt='pic'/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent = robots.map((user, i) => {\r\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/> \r\n    }) \r\n\r\n    return(\r\n        <div>\r\n            {robots.map((user, i) => {\r\n                return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/> \r\n            })}\r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className=\"pa2 \">\r\n            <input \r\n                className='pa3 ba b--green bg-ligtest-blue' \r\n                type='search' \r\n                placeholder=\"search robots\" \r\n                onChange={searchChange}>\r\n            </input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\nimport Scroll from '../Components/Scroll';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots: users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n\r\n    render(){\r\n        \r\n        const filteredRobots = this.state.robots.filter((robot) => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n\r\n        return (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <SearchBox searchChange = {this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots = {filteredRobots}/>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}